<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">


  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
<context-param>
  <param-name>contextConfigLocation</param-name>
  <param-value>WEB-INF/springmvc.xml</param-value>
</context-param>
<servlet>
  <servlet-name>DispatcherServlet</servlet-name>
  <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
<!--  配置一个初始化参数，目的是配置SpringMvc配置文件的位置和名称-->
  <init-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>WEB-INF/springmvc.xml</param-value>
  </init-param>
<!--  web应用被加载的时候创建这个servlet，而不是第一次访问的时候创建-->
  <load-on-startup>1</load-on-startup>
</servlet>
  <servlet-mapping>
    <servlet-name>DispatcherServlet</servlet-name>
<!--
< url-pattern>/</url-pattern>  会匹配到/login这样的路径型url，不会匹配到模式为*.jsp这样的后缀型url
< url-pattern>/*</url-pattern> 会匹配所有url：路径型的和后缀型的url(包括/login,*.jsp,*.js和*.html等)
如果写成/*则*.jsp也会交给DispatcherServlet处理所以会出现渲染页面失败显示源代码的状况
*.jsp这类静态资源文件要交给Tomcat的DefaultServlet处理，而它的匹配路径刚好是/，所以要配置  <mvc:default-servlet-handler></mvc:default-servlet-handler>这句话
让Dispatcher处理不了的请求交给Tomcat的DefaultServlet处理-->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

</web-app>
        